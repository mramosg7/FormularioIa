// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

// Define el modelo Plan
model Plan {
  id          String     @id @default(uuid()) @map("id") // Mapea a UUID en la base de datos
  descripcion String
}

// Define el modelo Usuario
model Usuario {
  id       String    @id @default(uuid()) @map("id") // Mapea a UUID en la base de datos
  nombre   String
  nick     String
  email    String
  plan     Plan      @relation(fields: [planId], references: [id])
  planId   String
}

// Define el modelo Formulario
model Formulario {
  id          String    @id @default(uuid()) @map("id") // Mapea a UUID en la base de datos
  usuario     Usuario   @relation(fields: [usuarioId], references: [id])
  usuarioId   String
  name        String
  description String
}

// Define el modelo tipoPregunta
model tipoPregunta {
  id          String    @id @default(uuid()) @map("id") // Mapea a UUID en la base de datos
  descripcion String
}

// Define el modelo preguntaFormulario
model preguntaFormulario {
  id          String    @id @default(uuid()) @map("id") // Mapea a UUID en la base de datos
  formulario  Formulario @relation(fields: [formularioId], references: [id])
  formularioId String
  texto       String
  tipo        tipoPregunta @relation(fields: [tipoId], references: [id])
  tipoId      String
}

// Define el modelo opcionPregunta
model opcionPregunta {
  id       String            @id @default(uuid()) @map("id") // Mapea a UUID en la base de datos
  pregunta preguntaFormulario @relation(fields: [preguntaId], references: [id])
  preguntaId String
  text     String
  value    String
}
